#include<bits/stdc++.h>
int minimumSpanningTree(vector<vector<int>>& edges, int n)
{
  /*
    Don't write main().
    Don't read input, it is passed as function argument.    
    No need to print anything.
    Taking input and printing output is handled automatically.
  */
  vector<pair<int,int>>adj[n];
  for(auto it:edges){
    adj[it[0]].push_back({it[1],it[2]});
    adj[it[1]].push_back({it[0],it[2]});
  }
  priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
  vector<int>vis(n,0);
  // int,node
  pq.push({0,0});
  int sum=0;
  while(!pq.empty()){
    auto it=pq.top();
    pq.pop();
    int node=it.second;
    int wt=it.first;
    if(vis[node]==1) continue;
    vis[node]=1;
    sum+=wt;
    for(auto it:adj[node]){
      int adjNode=it.first;
      int cost=it.second;
      if(!vis[adjNode]) pq.push({cost,adjNode});
    }
  }
  return sum;
}
